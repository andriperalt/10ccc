akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  log-config-on-start = off
  jvm-exit-on-fatal-error = on

  log-dead-letters = on
  log-dead-letters-during-shutdown = on

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    mailbox.requirements {
      "akka.dispatch.BoundedMessageQueueSemantics" = bounded-mailbox
      "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" = bounded-mailbox
    }
  }

  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }

  cluster {
    auto-down-unreachable-after = 10s
    metrics.enabled = off
  }

  persistence.journal {
    leveldb.native = off
    leveldb-shared.store.native = off
  }
}

bounded-mailbox {
  mailbox-type = "akka.dispatch.BoundedMailbox"
  mailbox-capacity = 1000
  mailbox-push-timeout-time = 100ms
  stash-capacity = 1000
}

jdbc-journal {
  class = "akka.persistence.jdbc.journal.OracleSyncWriteJournal"
}

jdbc-snapshot-store {
  class = "akka.persistence.jdbc.snapshot.OracleSyncSnapshotStore"
}

jdbc-connection {
  username = "ADM_MOS"
  password = "dySOxIdNvSD2Wx3o79ISNA=="
  driverClassName = "oracle.jdbc.driver.OracleDriver"
  url = "jdbc:oracle:thin:@mdebddd06:1537/DLLOLFHA"
  journalSchemaName = ""
  journalTableName = "TMDS_JOURNAL"
  snapshotSchemaName = ""
  snapshotTableName = "TMDS_SNAPSHOT"
}

sura {
  deployment = off
  take-snapshot = 2 h
  max-number-retries-restore = 0
  max-number-retries-persist = 0

  cluster {
    default-port = 9409
    seeds = [
      {
        seed {
          host = "127.0.0.1"
          port = 9408
        }
      },
      {
        seed {
          host = "127.0.0.1"
          port = 9412
        }
      }
    ]
  }
}

include "constants"
include "sura"
